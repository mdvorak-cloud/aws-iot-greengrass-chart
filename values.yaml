# Default values for aws-iot-greengrass.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# NOTE Deployment expects Secret of same name to be present, with device.pem.crt and private.pem.key keys.

replicaCount: 1

image:
  repository: amazon/aws-iot-greengrass
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

greengrass:
  # Mandatory
  thingName: ""
  awsRegion: ""
  iotDataEndpoint: ""
  iotCredEndpoint: ""
  iotRoleAlias: ""
  # Optional
  configPath: "/greengrass/config.yaml"
  certificateFilePath: "/greengrass/certs/device.pem.crt"
  privateKeyPath: "/greengrass/certs/private.pem.key"
  rootCaPath: "/greengrass/certs/AmazonRootCA1.pem"
  rootpath: "/greengrass/v2"
  componentDefaultUser: "ggc_user:ggc_group"
  logLevel: INFO
  deployDevTools: false
  nucleusConfiguration: { }

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  ports: [ ]
#    - name: stream_manager_server
#      port: 8088
#      containerPort: 8088
#      protocol: TCP

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: { }

tolerations: [ ]

affinity: { }

env: [ ]
#  - name: STREAM_MANAGER_SERVER_PORT
#    value: "8088"

extraObjects: [ ]
